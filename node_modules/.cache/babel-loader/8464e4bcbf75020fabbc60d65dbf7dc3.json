{"ast":null,"code":"import axios, { AxiosRequestConfig } from 'axios';\nimport APIAUTH from './FTX API KEY.txt';\nimport forge from 'node-forge';\nlet API_KEY;\nlet API_SECRET;\nfetch(APIAUTH).then(r => r.text()).then(text => {\n  API_KEY = text.substring(10, 50);\n  API_SECRET = text.substring(64);\n  console.log(API_KEY, API_SECRET);\n});\nlet time = new Date().getTime(); // generate and return hash\n\nfunction generateHash(plainText, secretKey) {\n  let hmac = forge.hmac.create();\n  hmac.start('sha256', secretKey);\n  hmac.update(plainText);\n  var hashText = hmac.digest().toHex();\n  return hashText;\n}\n\nfunction sendOrder(market, side, price, size) {\n  axios({\n    method: 'POST',\n    url: 'https://ftx.com/api/orders',\n    data: {\n      \"market\": market,\n      \"side\": side,\n      \"price\": price,\n      \"type\": \"limit\",\n      \"size\": size,\n      \"reduceOnly\": false,\n      \"ioc\": false,\n      \"postOnly\": false,\n      \"clientId\": null\n    },\n    headers: {\n      \"FTX-KEY\": API_KEY,\n      \"FTX-TS\": time,\n      \"FTX-SIGN\": generateHash(`${new Date()}${\"POST\"}${\"/orders\"}`, API_SECRET)\n    }\n  });\n}\n\nexport { sendOrder };","map":{"version":3,"names":["axios","AxiosRequestConfig","APIAUTH","forge","API_KEY","API_SECRET","fetch","then","r","text","substring","console","log","time","Date","getTime","generateHash","plainText","secretKey","hmac","create","start","update","hashText","digest","toHex","sendOrder","market","side","price","size","method","url","data","headers"],"sources":["/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/rest-client.js"],"sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\nimport APIAUTH from './FTX API KEY.txt';\nimport forge from 'node-forge';\n\n\nlet API_KEY;\nlet API_SECRET;\n\nfetch(APIAUTH)\n  .then(r => r.text())\n  .then(text => {\n    API_KEY = text.substring(10, 50)\n    API_SECRET = text.substring(64);\n    console.log(API_KEY, API_SECRET);\n  });\n\nlet time = new Date().getTime();\n\n// generate and return hash\nfunction generateHash(plainText, secretKey){\n    let hmac = forge.hmac.create();  \n        hmac.start('sha256', secretKey);\n        hmac.update(plainText);  \n        var hashText = hmac.digest().toHex();  \n        return hashText\n    }      \n\nfunction sendOrder(market, side, price, size){\n    \n    axios({\n    method: 'POST',\n    url: 'https://ftx.com/api/orders',\n    data: {\n        \"market\": market,\n        \"side\": side,\n        \"price\": price,\n        \"type\": \"limit\",\n        \"size\": size,\n        \"reduceOnly\": false,\n        \"ioc\": false,\n        \"postOnly\": false,\n        \"clientId\": null\n    },\n    headers: {\n        \"FTX-KEY\": API_KEY,\n        \"FTX-TS\": time,\n        \"FTX-SIGN\": generateHash(`${new Date()}${\"POST\"}${\"/orders\"}`, API_SECRET),\n    }\n  })\n}\n\nexport { sendOrder };"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,kBAAhB,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAGA,IAAIC,OAAJ;AACA,IAAIC,UAAJ;AAEAC,KAAK,CAACJ,OAAD,CAAL,CACGK,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQE,IAAI,IAAI;EACZL,OAAO,GAAGK,IAAI,CAACC,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAAV;EACAL,UAAU,GAAGI,IAAI,CAACC,SAAL,CAAe,EAAf,CAAb;EACAC,OAAO,CAACC,GAAR,CAAYR,OAAZ,EAAqBC,UAArB;AACD,CANH;AAQA,IAAIQ,IAAI,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAX,C,CAEA;;AACA,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;EACvC,IAAIC,IAAI,GAAGhB,KAAK,CAACgB,IAAN,CAAWC,MAAX,EAAX;EACID,IAAI,CAACE,KAAL,CAAW,QAAX,EAAqBH,SAArB;EACAC,IAAI,CAACG,MAAL,CAAYL,SAAZ;EACA,IAAIM,QAAQ,GAAGJ,IAAI,CAACK,MAAL,GAAcC,KAAd,EAAf;EACA,OAAOF,QAAP;AACH;;AAEL,SAASG,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA6C;EAEzC9B,KAAK,CAAC;IACN+B,MAAM,EAAE,MADF;IAENC,GAAG,EAAE,4BAFC;IAGNC,IAAI,EAAE;MACF,UAAUN,MADR;MAEF,QAAQC,IAFN;MAGF,SAASC,KAHP;MAIF,QAAQ,OAJN;MAKF,QAAQC,IALN;MAMF,cAAc,KANZ;MAOF,OAAO,KAPL;MAQF,YAAY,KARV;MASF,YAAY;IATV,CAHA;IAcNI,OAAO,EAAE;MACL,WAAW9B,OADN;MAEL,UAAUS,IAFL;MAGL,YAAYG,YAAY,CAAE,GAAE,IAAIF,IAAJ,EAAW,GAAE,MAAO,GAAE,SAAU,EAApC,EAAuCT,UAAvC;IAHnB;EAdH,CAAD,CAAL;AAoBH;;AAED,SAASqB,SAAT"},"metadata":{},"sourceType":"module"}