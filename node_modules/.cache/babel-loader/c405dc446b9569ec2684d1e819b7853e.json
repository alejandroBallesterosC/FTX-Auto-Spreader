{"ast":null,"code":"var _jsxFileName = \"/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/APILogIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./APILogIn.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction APILogIn() {\n  _s();\n\n  const [enteredAPIKey, setAPIKey] = useState();\n  const symbols = [\"BTC-MOVE-09-04\", \"BTC/USD\"];\n  const [btc_usd, setBtcUsd] = useState(null);\n\n  function textChangeHandler(event) {\n    setAPIKey(event.target.value);\n  }\n\n  const submitHandler = event => {\n    event.preventDefault(); //prevents reloading in the browser\n\n    const API_KEY = enteredAPIKey;\n    console.log(API_KEY);\n  };\n\n  const ws_init = function () {\n    const ws = new WebSocket(\"wss://ftx.com/ws/\");\n\n    ws.onopen = function () {\n      for (var s of symbols) {\n        ws.send(`{\"op\": \"subscribe\", \"channel\": \"trades\", \"market\": \"${s}\"}`);\n      }\n    };\n\n    ws.onclose = function () {\n      setTimeout(ws_init, 5000);\n    };\n\n    ws.onerror = function (error) {\n      console.log('WS error: ' + error);\n    };\n\n    ws.onmessage = function (e) {\n      let data = JSON.parse(e.data);\n\n      if (data.channel == \"trades\" && data.type == \"update\") {\n        console.log(data);\n        handleTrades(data);\n      }\n    };\n\n    const ping = function () {\n      ws.send('{\"op\":\"ping\"}');\n    };\n\n    setInterval(ping, 10000);\n  };\n\n  ws_init();\n\n  const handleTrades = function (data) {\n    if (data.market == \"BTC/USD\") {\n      setBtcUsd(data.data[0].price); // set the btc global for calculations, used in app.js\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-log-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"FTX API KEY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: textChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Authenticate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" BTC/USD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: btc_usd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(APILogIn, \"T/jZkWoJ8LSPXVy7UwBPhJj8PdM=\");\n\n_c = APILogIn;\nexport default APILogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"APILogIn\");","map":{"version":3,"names":["React","useState","APILogIn","enteredAPIKey","setAPIKey","symbols","btc_usd","setBtcUsd","textChangeHandler","event","target","value","submitHandler","preventDefault","API_KEY","console","log","ws_init","ws","WebSocket","onopen","s","send","onclose","setTimeout","onerror","error","onmessage","e","data","JSON","parse","channel","type","handleTrades","ping","setInterval","market","price"],"sources":["/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/APILogIn.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./APILogIn.css\";\n\n\nfunction APILogIn() {\n  const [enteredAPIKey, setAPIKey] = useState();\n  const symbols = [\"BTC-MOVE-09-04\", \"BTC/USD\"];\n  const [btc_usd, setBtcUsd] = useState(null);\n\n  function textChangeHandler(event) {\n    setAPIKey(event.target.value);\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault(); //prevents reloading in the browser\n    const API_KEY = enteredAPIKey;\n    console.log(API_KEY);\n  };\n\n  const ws_init = function () {\n    const ws = new WebSocket(\"wss://ftx.com/ws/\");\n\n    ws.onopen = function () {\n        for (var s of symbols) {\n            ws.send(`{\"op\": \"subscribe\", \"channel\": \"trades\", \"market\": \"${s}\"}`);\n        }\n    };\n\n    ws.onclose = function () {\n        setTimeout(ws_init, 5000);\n    };\n\n    ws.onerror = function (error) {\n        console.log('WS error: ' + error);\n    };\n\n    ws.onmessage = function (e) {\n        let data = JSON.parse(e.data);\n        if (data.channel == \"trades\" && data.type == \"update\") {\n          console.log(data);\n          handleTrades(data);\n        }\n    };\n\n    const ping = function () {\n        ws.send('{\"op\":\"ping\"}');\n    };\n    setInterval(ping, 10000);\n}\n\nws_init();\n\nconst handleTrades = function (data) {\n    if (data.market == \"BTC/USD\") {\n      setBtcUsd(data.data[0].price);  // set the btc global for calculations, used in app.js\n    }\n}\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div className=\"api-log-in\">\n          <label>FTX API KEY</label>\n          <input type=\"text\" onChange={textChangeHandler} />\n        </div>\n        <button> Authenticate </button>\n      </form>\n      <div>\n        <p> BTC/USD </p>\n        <p>{btc_usd}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default APILogIn;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;;AAGA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,aAAD,EAAgBC,SAAhB,IAA6BH,QAAQ,EAA3C;EACA,MAAMI,OAAO,GAAG,CAAC,gBAAD,EAAmB,SAAnB,CAAhB;EACA,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBN,QAAQ,CAAC,IAAD,CAArC;;EAEA,SAASO,iBAAT,CAA2BC,KAA3B,EAAkC;IAChCL,SAAS,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD;;EAED,MAAMC,aAAa,GAAIH,KAAD,IAAW;IAC/BA,KAAK,CAACI,cAAN,GAD+B,CACP;;IACxB,MAAMC,OAAO,GAAGX,aAAhB;IACAY,OAAO,CAACC,GAAR,CAAYF,OAAZ;EACD,CAJD;;EAMA,MAAMG,OAAO,GAAG,YAAY;IAC1B,MAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAc,mBAAd,CAAX;;IAEAD,EAAE,CAACE,MAAH,GAAY,YAAY;MACpB,KAAK,IAAIC,CAAT,IAAchB,OAAd,EAAuB;QACnBa,EAAE,CAACI,IAAH,CAAS,uDAAsDD,CAAE,IAAjE;MACH;IACJ,CAJD;;IAMAH,EAAE,CAACK,OAAH,GAAa,YAAY;MACrBC,UAAU,CAACP,OAAD,EAAU,IAAV,CAAV;IACH,CAFD;;IAIAC,EAAE,CAACO,OAAH,GAAa,UAAUC,KAAV,EAAiB;MAC1BX,OAAO,CAACC,GAAR,CAAY,eAAeU,KAA3B;IACH,CAFD;;IAIAR,EAAE,CAACS,SAAH,GAAe,UAAUC,CAAV,EAAa;MACxB,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAACC,IAAb,CAAX;;MACA,IAAIA,IAAI,CAACG,OAAL,IAAgB,QAAhB,IAA4BH,IAAI,CAACI,IAAL,IAAa,QAA7C,EAAuD;QACrDlB,OAAO,CAACC,GAAR,CAAYa,IAAZ;QACAK,YAAY,CAACL,IAAD,CAAZ;MACD;IACJ,CAND;;IAQA,MAAMM,IAAI,GAAG,YAAY;MACrBjB,EAAE,CAACI,IAAH,CAAQ,eAAR;IACH,CAFD;;IAGAc,WAAW,CAACD,IAAD,EAAO,KAAP,CAAX;EACH,CA7BC;;EA+BFlB,OAAO;;EAEP,MAAMiB,YAAY,GAAG,UAAUL,IAAV,EAAgB;IACjC,IAAIA,IAAI,CAACQ,MAAL,IAAe,SAAnB,EAA8B;MAC5B9B,SAAS,CAACsB,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaS,KAAd,CAAT,CAD4B,CACI;IACjC;EACJ,CAJD;;EAKE,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAE1B,aAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEJ;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAIF;MAAJ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GApEQJ,Q;;KAAAA,Q;AAsET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}