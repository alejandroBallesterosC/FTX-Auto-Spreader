{"ast":null,"code":"var _jsxFileName = \"/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/PriceLadder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ws } from \"./session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PriceLadder() {\n  _s();\n\n  const NUM_LEVELS = 10;\n  const NUM_LEVELS_SHOWN = 10;\n  var asksArray = Array(NUM_LEVELS).fill({\n    price: 0,\n    qty: 0\n  });\n  const [asks, setAsks] = useState(asksArray);\n  const [bids, setBids] = useState(null);\n\n  ws.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n\n    if ( //if first time receiving orderbook\n    data.channel == \"orderbook\" && data.market == \"BTC/USD\" && data.data.action == \"partial\") {\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        asksArray[i].price = data.data.asks[i][0];\n        asksArray[i].qty = data.data.asks[i][1];\n      }\n\n      setAsks(asksArray);\n      console.log(asksArray);\n    } else if ( //if updating an already loaded orderbook\n    data.channel == \"orderbook\" && data.market == \"BTC/USD\" && data.data.action == \"update\") {\n      //update asks\n      console.log('Best Ask: ', data.data.asks[0]);\n      var numNonZeroLevels = NUM_LEVELS;\n      var updatedAsks = [];\n      var i = 0;\n      var j = 0;\n\n      while (updatedAsks.length < numNonZeroLevels) {\n        if (i < data.data.asks.length && j < asks.length) {\n          if (asks[j].price < data.data.asks[i][0]) {\n            updatedAsks.push(asks[j]);\n            j++;\n          } else if (asks[j].price == data.data.asks[i][0]) {\n            if (data.data.asks[i][1] == 0) {\n              numNonZeroLevels -= 1;\n            } else {\n              updatedAsks.push({\n                price: data.data.asks[i][0],\n                qty: data.data.asks[i][1]\n              });\n            }\n\n            i++;\n            j++;\n          } else {\n            updatedAsks.push({\n              price: data.data.asks[i][0],\n              qty: data.data.asks[i][1]\n            });\n            i++;\n          }\n        } else if (j < asks.length) {\n          updatedAsks.push(asks[j]);\n          j++;\n        }\n      }\n\n      setAsks(updatedAsks);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ladder\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [...asks].reverse().slice(0, NUM_LEVELS_SHOWN).map((ask, index) =>\n        /*#__PURE__*/\n        // Setting \"index\" as key because name and age can be repeated, It will be better if you assign uniqe id as key\n        _jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"px: \", ask.price, \", qty: \", ask.qty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PriceLadder, \"Vu0P7fVdKokbmDwCWBP4CigGUSI=\");\n\n_c = PriceLadder;\nexport default PriceLadder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceLadder\");","map":{"version":3,"names":["React","useState","ws","PriceLadder","NUM_LEVELS","NUM_LEVELS_SHOWN","asksArray","Array","fill","price","qty","asks","setAsks","bids","setBids","onmessage","e","data","JSON","parse","channel","market","action","i","console","log","numNonZeroLevels","updatedAsks","j","length","push","reverse","slice","map","ask","index"],"sources":["/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/PriceLadder.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ws } from \"./session\";\n\nfunction PriceLadder() {\n  const NUM_LEVELS = 10\n  const NUM_LEVELS_SHOWN = 10\n  var asksArray = Array(NUM_LEVELS).fill({price: 0, qty: 0,});\n  \n  const [asks, setAsks] = useState(asksArray);\n  const [bids, setBids] = useState(null);\n\n  ws.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n    if (//if first time receiving orderbook\n      data.channel == \"orderbook\" &&\n      data.market == \"BTC/USD\" &&\n      data.data.action == \"partial\"\n    ) {\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        asksArray[i].price = data.data.asks[i][0];\n        asksArray[i].qty = data.data.asks[i][1];\n      }\n      setAsks(asksArray);\n      console.log(asksArray);\n    } else if (//if updating an already loaded orderbook\n      data.channel == \"orderbook\" &&\n      data.market == \"BTC/USD\" &&\n      data.data.action == \"update\"\n    ) {\n        //update asks\n        console.log('Best Ask: ', data.data.asks[0])\n        var numNonZeroLevels = NUM_LEVELS;\n        var updatedAsks = [];\n        var i = 0;\n        var j = 0;\n        while (updatedAsks.length < numNonZeroLevels){\n            if (i < data.data.asks.length && j < asks.length){\n                if (asks[j].price < data.data.asks[i][0]){\n                    updatedAsks.push(asks[j]);\n                    j++;\n                }else if (asks[j].price == data.data.asks[i][0]){\n                    if (data.data.asks[i][1] == 0){\n                      numNonZeroLevels -= 1;\n                    }else{\n                      updatedAsks.push({price: data.data.asks[i][0], qty: data.data.asks[i][1]});\n                    }\n                    i++;\n                    j++;\n                }else{\n                    updatedAsks.push({price: data.data.asks[i][0], qty: data.data.asks[i][1]});\n                    i++;\n                }\n            }else if (j < asks.length){\n                updatedAsks.push(asks[j]);\n                j++;\n            }\n        }\n      setAsks(updatedAsks);\n    }\n  };\n\n  return (\n    <div className=\"ladder\">\n      <table>\n        <tbody>\n          {[...asks].reverse().slice(0, NUM_LEVELS_SHOWN).map((ask, index) => (\n            // Setting \"index\" as key because name and age can be repeated, It will be better if you assign uniqe id as key\n            <tr key={index}>\n              <td>\n                px: {ask.price}, qty: {ask.qty}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default PriceLadder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}