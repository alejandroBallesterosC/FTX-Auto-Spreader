{"ast":null,"code":"var _jsxFileName = \"/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/PriceLadder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ws } from \"./session\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PriceLadder() {\n  _s();\n\n  const NUM_LEVELS = 10;\n  var asksArray = Array(NUM_LEVELS).fill({\n    price: 0,\n    qty: 0\n  });\n  var bidsArray = Array(NUM_LEVELS).fill({\n    price: 0,\n    qty: 0\n  });\n  const [asks, setAsks] = useState(asksArray);\n  const [bids, setBids] = useState(null);\n\n  ws.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n\n    if ( //if first time receiving orderbook\n    data.channel == \"orderbook\" && data.market == \"BTC/USD\" && data.data.action == \"partial\") {\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        asksArray[i].price = data.data.asks[i][0];\n        asksArray[i].qty = data.data.asks[i][1];\n      }\n\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        bidsArray[i].price = data.data.bids[i][0];\n        bidsArray[i].qty = data.data.bids[i][1];\n      }\n\n      setAsks(asksArray);\n      setBids(bidsArray); //console.log(asksArray);\n    } else if ( //if updating an already loaded orderbook\n    data.channel == \"orderbook\" && data.market == \"BTC/USD\" && data.data.action == \"update\") {\n      //update asks\n      console.log(\"Best Ask: \", data.data.asks[0]);\n      var updatedAsks = [];\n      var numZeroAsks = 0;\n      var askToPush = null;\n      var i = 0;\n      var j = 0;\n\n      while (updatedAsks.length < NUM_LEVELS) {\n        if (i < data.data.asks.length && j < asks.length) {\n          if (asks[j].price < data.data.asks[i][0]) {\n            askToPush = asks[j];\n            j++;\n          } else if (asks[j].price == data.data.asks[i][0]) {\n            askToPush = {\n              price: data.data.asks[i][0],\n              qty: data.data.asks[i][1]\n            };\n            i++;\n            j++;\n          } else {\n            askToPush = {\n              price: data.data.asks[i][0],\n              qty: data.data.asks[i][1]\n            };\n            i++;\n          }\n        } else if (j < asks.length) {\n          askToPush = asks[j];\n          j++;\n        }\n\n        updatedAsks.push(askToPush);\n\n        if (askToPush.qty == 0) {\n          numZeroAsks += 1;\n        }\n      }\n\n      if (numZeroAsks >= 5) {\n        ws.send(`{\"op\": \"unsubscribe\", \"channel\": \"orderbook\", \"market\": \"BTC/USD\"}`);\n        ws.send(`{\"op\": \"subscribe\", \"channel\": \"orderbook\", \"market\": \"BTC/USD\"}`);\n      } else {\n        console.log(numZeroAsks);\n        setAsks(updatedAsks);\n      }\n    }\n  };\n\n  const isNonZero = ask => ask.qty != 0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ladder\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [...asks].reverse().filter(isNonZero).map((ask, index) =>\n        /*#__PURE__*/\n        //slice(0, NUM_LEVELS)\n        // Setting \"index\" as key because name and age can be repeated, It will be better if you assign uniqe id as key\n        _jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"px: \", ask.price, \", qty: \", ask.qty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PriceLadder, \"Vu0P7fVdKokbmDwCWBP4CigGUSI=\");\n\n_c = PriceLadder;\nexport default PriceLadder;\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceLadder\");","map":{"version":3,"names":["React","useState","ws","PriceLadder","NUM_LEVELS","asksArray","Array","fill","price","qty","bidsArray","asks","setAsks","bids","setBids","onmessage","e","data","JSON","parse","channel","market","action","i","console","log","updatedAsks","numZeroAsks","askToPush","j","length","push","send","isNonZero","ask","reverse","filter","map","index"],"sources":["/Users/alejandroballesteros/Documents/GitHub/ftx-autospreader/src/components/PriceLadder.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ws } from \"./session\";\n\nfunction PriceLadder() {\n  const NUM_LEVELS = 10;\n  var asksArray = Array(NUM_LEVELS).fill({ price: 0, qty: 0 });\n  var bidsArray = Array(NUM_LEVELS).fill({ price: 0, qty: 0 });\n  const [asks, setAsks] = useState(asksArray);\n  const [bids, setBids] = useState(null);\n\n  ws.onmessage = function (e) {\n    let data = JSON.parse(e.data);\n    if (\n      //if first time receiving orderbook\n      data.channel == \"orderbook\" &&\n      data.market == \"BTC/USD\" &&\n      data.data.action == \"partial\"\n    ) {\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        asksArray[i].price = data.data.asks[i][0];\n        asksArray[i].qty = data.data.asks[i][1];\n      }\n      for (var i = 0; i < NUM_LEVELS; i++) {\n        bidsArray[i].price = data.data.bids[i][0];\n        bidsArray[i].qty = data.data.bids[i][1];\n      }\n      setAsks(asksArray);\n      setBids(bidsArray);\n      //console.log(asksArray);\n    } else if (\n      //if updating an already loaded orderbook\n      data.channel == \"orderbook\" &&\n      data.market == \"BTC/USD\" &&\n      data.data.action == \"update\"\n    ) {\n      //update asks\n      console.log(\"Best Ask: \", data.data.asks[0]);\n      var updatedAsks = [];\n      var numZeroAsks = 0;\n      var askToPush = null;\n      var i = 0;\n      var j = 0;\n      while (updatedAsks.length < NUM_LEVELS) {\n        if (i < data.data.asks.length && j < asks.length) {\n          if (asks[j].price < data.data.asks[i][0]) {\n            askToPush = asks[j];\n            j++;\n          } else if (asks[j].price == data.data.asks[i][0]) {\n            askToPush = {\n              price: data.data.asks[i][0],\n              qty: data.data.asks[i][1],\n            };\n            i++;\n            j++;\n          } else {\n            askToPush = {\n              price: data.data.asks[i][0],\n              qty: data.data.asks[i][1],\n            };\n            i++;\n          }\n        } else if (j < asks.length) {\n          askToPush = asks[j];\n          j++;\n        }\n        updatedAsks.push(askToPush);\n        if (askToPush.qty == 0) {\n          numZeroAsks += 1;\n        }\n      }\n      if (numZeroAsks >= 5) {\n        ws.send(`{\"op\": \"unsubscribe\", \"channel\": \"orderbook\", \"market\": \"BTC/USD\"}`);\n        ws.send(`{\"op\": \"subscribe\", \"channel\": \"orderbook\", \"market\": \"BTC/USD\"}`);\n      } else {\n        console.log(numZeroAsks)\n        setAsks(updatedAsks);\n      }\n    }\n  };\n  const isNonZero = (ask) => ask.qty != 0;\n\n  return (\n    <div className=\"ladder\">\n      <table>\n        <tbody>\n          {[...asks]\n            .reverse()\n            .filter(isNonZero)\n            .map((ask, index) => (\n              //slice(0, NUM_LEVELS)\n              // Setting \"index\" as key because name and age can be repeated, It will be better if you assign uniqe id as key\n              <tr key={index}>\n                <td>\n                  px: {ask.price}, qty: {ask.qty}\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default PriceLadder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}